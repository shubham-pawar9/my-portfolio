[
    {
    "lang":"html",
    "heading": "Demystifying the HTML Boilerplate: Your Go-To Template for Web Development",
    "shortDiscription": "When it comes to web development, having a solid foundation is crucial. The HTML boilerplate is that reliable foundation every web developer should be familiar with. In this article, we'll dive into what an HTML boilerplate is and why it's an essential tool in your web development arsenal.",
    "mainDiscription": {
        "heading" : "Understanding the HTML Boilerplate",
        "details" : [
            "At its core, the HTML boilerplate is a standardized template for creating HTML documents. It's essentially a skeleton structure that forms the basis of every web page you build. This template includes all the fundamental elements necessary for a valid HTML document. Let's break it down:",
            "<html>: This tag signifies the beginning and end of your HTML document. Everything within your web page is enclosed within these opening and closing tags.",
            "<head>: Inside the <head> section, you define metadata about your webpage, such as the title, character encoding, and links to external resources like stylesheets and scripts.",
            "<title>: The <title> tag specifies the title of your webpage, which appears in the browser's title bar or tab.",
            "<meta charset='UTF-8'>: This meta tag sets the character encoding for your webpage, ensuring that special characters and symbols display correctly.",
            "<body>: The <body> section contains the content that is visible to users, including text, images, links, and more."
        ]
    },
    "src": "one"
    },
    {
        "lang":"css",
        "heading": "Understanding the Power of CSS Flexbox Layout",
        "shortDiscription": "In the ever-evolving world of web design, it's crucial to stay updated with the latest techniques and tools that can make your life easier. CSS Flexbox is one such tool that has revolutionized the way we create layouts. In this article, we'll explore the concepts of Flexbox, understand its core principles, and see how it can streamline the process of building responsive and flexible web designs.",
        "mainDiscription": {
            "heading" : "Key Concepts of Flexbox",
            "details" : [
                "Container and Items: Flexbox works by dividing your layout into two main components: the flex container and the flex items. The container can be any HTML element, like a <div>, while the items are the elements within the container that you want to arrange, such as <div>, <p>, or <ul>.",
                "Main Axis and Cross Axis: Flexbox operates along two axes, the main axis and the cross axis. The main axis defines the direction in which your items will be laid out, and the cross axis runs perpendicular to it.",
                "Flex Properties: To control the layout, Flexbox provides a set of CSS properties, such as display: flex; to make an element a flex container, and properties like flex-direction, justify-content, align-items, and flex-grow to define how items behave within the container."
               ]
        },
        "src": "two"
    },
    {
        "lang":"javascript",
        "heading": "Exploring JavaScript Data Types: A Comprehensive Guide",
        "shortDiscription": "JavaScript is a versatile and dynamic programming language used for building interactive web applications. At the core of JavaScript lies its data types, which are the building blocks of any program. In this article, we'll take a deep dive into JavaScript data types, understanding their significance and how to work with them effectively.",
        "mainDiscription": {
            "heading" : "The Fundamentals of Data Types",
            "details" : [
                "Numbers: These can be integers or floating-point values. JavaScript allows for arithmetic operations on numbers.",
                "Strings: Strings represent textual data and are enclosed in single or double quotes.",
                "Booleans: Booleans can have one of two values, true or false, and are often used in conditional statements.",     
                "Undefined and Null: These are special data types representing the absence of value. Variables that are declared but not assigned a value are undefined, while null is used to signify the absence of an object.",
                "Objects: Objects are collections of key-value pairs, and they are used to represent complex data structures.",              
                "Arrays: Arrays are a special type of object used to store ordered collections of values."
               ]
        },
        "src": "three"
    }
]